# This is the corrected workflow file for a Python/Flask App using Service Principal authentication

name: Build and deploy Python app to Azure Web App - smarthealthai

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create and start a virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_3B2DAED662904A3196509FEAD123E626 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_81EE5BED69E24E0499C1DDF70B863CDB }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_956D2933D6BC403984B1126BEECDA7D5 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'smarthealthai'
          slot-name: 'Production'
          package: .
          app-settings-json: |
            [
                { "name": "GOOGLE_API_KEY", "value": "${{ secrets.GOOGLE_API_KEY }}", "slotSetting": false },
                { "name": "Maps_API_KEY", "value": "${{ secrets.Maps_API_KEY }}", "slotSetting": false }
            ]
